name: Deploy and test changes in an Azure environment

on:
  pull_request:

concurrency: 
  group: ${{ github.repository }}__${{ github.ref }}-ci
  cancel-in-progress: true

jobs:
  deploy-and-test-in-azure: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build and start container
        run: |
          TAG=${{ github.head_ref || github.ref_name }} \
          docker compose \
            --file .ci/docker-compose.yml \
            up -d --force-recreate

      - name: Log in to Azure
        run: |
          touch .env
          TENANT=$(jq -r '.parameters.tenantId.value' .ci/parameters.json) >> .env
          SERVICE_PRINCIPAL_ID=${{ vars.SERVICE_PRINCIPAL_ID }} >> .env
          SERVICE_PRINCIPAL_PASSWORD=${{ secrets.SERVICE_PRINCIPAL_PASSWORD }} >> .env
          docker compose \
            --file .ci/docker-compose.yml \
            --env-file .env \
            exec azure \
              az login --tenant $TENANT \
                --service-principal \
                  --username $SERVICE_PRINCIPAL_ID \
                  --password $SERVICE_PRINCIPAL_PASSWORD

      - name: Deploy changes to the Azure environment
        id: deploy
        run: |
          docker compose \
            --file .ci/docker-compose.yml \
            exec azure \
              ./provision.sh parameters.json

      - name: Cancel deployment if the previous failed or was cancelled
        if: steps.deploy.outcome == 'failure' || steps.deploy.outcome == 'cancelled'
        run: |
          touch .env
          RESOURCE_GROUP=$(jq -r '.parameters.resourceGroupName.value' .ci/parameters.json) >> .env
          docker compose \
            --file .ci/docker-compose.yml \
            exec azure \
              az deployment group cancel \
                --resource-group $RESOURCE_GROUP \
                --name main

      # TODO pull latest skeleton
      # - name: Pull latest skeleton
      #   uses: actions/checkout@v4
      #   with:
      #     repository: TorqIT/pimcore-skeleton
      #     ref: 2024.x
      #     path: skeleton

      # TODO build and push skeleton images to CR (only on first deploy though)

      - name: Tear down Azure resources
        if: github.event.action == 'closed'
        run: |
          touch .env
          echo "Deleting Resource Group..."
          RESOURCE_GROUP=$(jq -r '.parameters.resourceGroupName.value' .ci/parameters.json) >> .env
          docker compose \
            --file .ci/docker-compose.yml \
            exec azure \
              az group delete \
                --name $RESOURCE_GROUP \
                --yes
          echo "Purging Key Vault..."
          KEY_VAULT=$(jq -r '.parameters.keyVaultName.value' .ci/parameters.json) >> .env
          docker compose \
            --file .ci/docker-compose.yml \
            exec azure \
              az keyvault purge \
                --name $KEY_VAULT