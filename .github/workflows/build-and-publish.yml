name: Create and publish Docker image

on:
  push:
  workflow_dispatch:
  release: 
    types: [created]

concurrency: 
  group: ${{ github.repository }}__${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: torqit/pimcore-azure-provisioning

jobs:
  release:
    uses: TorqIT/github-actions-workflows/.github/workflows/update-major-release-tag.yml@v1
    if: github.event_name == 'release' && github.event.action == 'created'

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [release]
    if: success() || failure()
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine image tags
        id: tags
        run: |
          echo "${{ github.event_name }}"
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "ref=latest" >> $GITHUB_OUTPUT
            if [ -z "${{ needs.release.outputs.tag }}" ]; then
              echo "major=${{ needs.release.outputs.tag }}"
            fi
          else 
            echo "ref=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.tags.outputs.ref }}
            ${{ steps.tags.outputs.major }}
      
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test
      
      - name: Test Docker image
        run: |
          docker run ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:test /bin/bash -c 'az bicep build -f bicep/main.bicep'

      - name: Push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}